" Plugins Beginning {
    set nocompatible
    let g:Plug_dir = '~/.vim/plugged/'

    filetype off

    call plug#begin(g:Plug_dir)

    Plug 'w0rp/ale'                     " Check syntax and fix
    Plug 'morhetz/gruvbox'              " colorscheme
    Plug 'majutsushi/tagbar'            " browse the tags of the current file and get an overview
    Plug 'roman/golden-ratio'           " automatic resizing
    Plug 'mhinz/vim-startify'           " start screen
    Plug 'tpope/vim-surround'           " mappings to easily delete, change and add such surroundings in pairs
    Plug 'Yggdroot/indentLine'          " display the indention levels
    Plug 'jiangmiao/auto-pairs'         " insert or delete brackets, parens, quotes in pair
    Plug 'kshenoy/vim-signature'        " display and navigate marks
    Plug 'ryanoasis/vim-devicons'       " file type icon
    Plug 'junegunn/vim-easy-align'      " alignment
    Plug 'easymotion/vim-easymotion'    " motions
    Plug 'terryma/vim-multiple-cursors' " multiple selections

    Plug 'scrooloose/nerdtree'                     " explorer
    Plug 'jistr/vim-nerdtree-tabs'                 " NERDTree and tabs together in Vim
    Plug 'scrooloose/nerdcommenter'                " commenter
    Plug 'Xuyuanp/nerdtree-git-plugin'             " show git status flags
    Plug 'tiagofumo/vim-nerdtree-syntax-highlight' " highlight for nerdtree files

    if !has('nvim')
      Plug 'roxma/nvim-yarp'
      Plug 'roxma/vim-hug-neovim-rpc'
    endif

    if has('nvim')
      Plug 'Shougo/deoplete.nvim' ,{'do': ':UpdateRemotePlugins'}
    else
      Plug 'Shougo/deoplete.nvim'
    endif
    Plug 'fszymanski/deoplete-emoji'
    Plug 'deoplete-plugins/deoplete-jedi'
    Plug 'carlitux/deoplete-ternjs', { 'do': 'npm install -g tern' }

    Plug 'mhinz/vim-signify'  " show a diff
    Plug 'tpope/vim-fugitive' " git wrapper

    Plug 'mattn/emmet-vim'

    Plug 'SirVer/ultisnips'
    Plug 'honza/vim-snippets'

    Plug 'sheerun/vim-polyglot'
    Plug 'heavenshell/vim-jsdoc'

    Plug 'luochen1990/rainbow'
    Plug 'gorodinskiy/vim-coloresque' " css/less/sass/html color preview

    Plug 'editorconfig/editorconfig-vim'

    " the_silver_searcher
    Plug 'rking/ag.vim'
    Plug 'junegunn/fzf.vim'
    Plug 'junegunn/fzf', {
        \ 'dir': '~/.fzf',
        \ 'do': './install --all' }

    Plug 'prettier/vim-prettier', {
        \ 'do': 'npm install',
        \ 'for': ['vue', 'css', 'less', 'scss'] }

    call plug#end()
" }

" Plugin Config Start {
    " deoplete {
        let g:deoplete#enable_at_startup = 1
    " }
    " Rainbow {
        let g:rainbow_active=1
    " }
    " Easemotion {
        let g:EasyMotion_smartcase = 1
    " }
    " Emmet {
        let g:user_emmet_expandabbr_key='<leader><Leader><tab>'
    " }
    " NerdTree {
        " let g:NERDTreeWinSize=30
        let g:NERDTreeChDirMode=1
        let g:NERDTreeMouseMode=2
        let g:NERDTreeQuitOnOpen=1
        let g:NERDTreeShowHidden=1
        let g:NERDTreeShowBookmarks=1
        let g:NERDTreeKeepTreeInNewTab=1
        let g:nerdtree_tabs_open_on_gui_startup=1
        let g:NERDTreeIgnore=[
                    \ '\.py[cd]$', '\~$', '\.swo$',
                    \ '\.swp$', '^\.git$', '^\.hg$',
                    \ '^\.svn$', '\.bzr$', '^\.DS_Store',
                    \ 'node_modules']
        let g:NERDTreeIndicatorMapCustom = {
            \ "Modified"  : "*",
            \ "Staged"    : "+",
            \ "Untracked" : "✭",
            \ "Renamed"   : "➜",
            \ "Unmerged"  : "═",
            \ "Deleted"   : "x",
            \ "Dirty"     : "✗",
            \ "Clean"     : "✔︎",
            \ 'Ignored'   : '☒',
            \ "Unknown"   : "?" }
        let g:NERDTreeDirArrowExpandable = '+'
        let g:NERDTreeDirArrowCollapsible = '-'
    " }
    " fzf {
        let g:fzf_action = {
                    \ 'ctrl-e': 'edit',
                    \ 'ctrl-t': 'tab split',
                    \ 'ctrl-x': 'split',
                    \ 'ctrl-v': 'vsplit' }
    " }
    " Ultisnips {
        let g:UltiSnipsExpandTrigger='<tab>'
        let g:UltiSnipsJumpBackwardTrigger='<c-j>'
        let g:UltiSnipsJumpForwardTrigger='<c-k>'
        let g:UltiSnipsEditSplit='vertical'
    " }
    " IndentLine {
        let g:indentLine_concealcursor=''
        let g:indentLine_conceallevel=2
    " }
    " Prettier{
        let g:prettier#autoformat = 0
        let g:prettier#quickfix_enabled = 0
        let g:prettier#config#tab_width = 4
        autocmd BufWritePre *.vue,*.css,*.less,*.scss PrettierAsync
    " }
    " Ale {
        " pip3 install flake8 pylint vim-vint autopep8 isort yapf
        let g:ale_fixers = {
                    \   '*': ['remove_trailing_lines', 'trim_whitespace'],
                    \   'go':['gofmt'],
                    \   'javascript':['eslint'],
                    \   'typescript':['eslint'],
                    \   'python':['autopep8', 'isort', 'yapf']}

        let g:ale_linters = {
                    \   'python':['flake8', 'pylint'],
                    \   'vim':['vim-vint']}
        let g:ale_lint_on_enter=1
        let g:ale_fix_on_save=1
    " }
    " Backup file {
        set backup
        set swapfile
        set undofile
        set writebackup
        " set nobackup
        " set noswapfile
        " set noundofile
        " set nowritebackup
        " 结尾的//表示生成的文件名带有绝对路径
        " 路径中用%替换目录分隔符，这样可以防止文件重名
        if WINDOWS()
            set backupdir=c:\backup\\
            set directory=c:\swp\\
            set undodir=c:\undo\\
        else
            set backupdir=~/.backup//
            set directory=~/.swp//
            set undodir=~/.undo//
        endif
    " }
    " UI {
        if has('gui_running')
            set guicursor=a:block-blinkon0
            set guioptions=
            " Fonts { Source\ Code\ Pro\ 16
            if LINUX()
                set guifont=SauceCodePro\ Nerd\ Font\ 16
                set guifontwide=YouYuan\ 16
            elseif OSX()
                set guifont=SauceCodePro\ Nerd\ Font:h16
                set guifontwide=YouYuan:h16
            elseif WINDOWS()
                set guifont=SauceCodePro_Nerd_Font:h16
                set guifontwide=YouYuan:h16
            endif
            " }
        endif
    " }
" }

" Tagbar {
  nmap <leader>t :TagbarToggle<CR>
" }
" Easy align {
  map ga <Plug>(EasyAlign)
" }
" Easemotion {
    map <Leader><Leader>j <Plug>(easymotion-j)
    map <Leader><Leader>k <Plug>(easymotion-k)
    map <Leader><leader>. <Plug>(easymotion-repeat)
    map <Leader><leader>l <Plug>(easymotion-lineforward)
    map <Leader><leader>h <Plug>(easymotion-linebackward)
" }
" Nerdtree {
    map <leader>e :NERDTreeFind<CR>
    map <leader>n :NERDTreeTabsToggle<CR>
" }
" Ale {
    nmap <silent> <C-k> <Plug>(ale_previous_wrap)
    nmap <silent> <C-j> <Plug>(ale_next_wrap)
" }
" FZF {
    nmap <C-p> :Files<CR>
    nmap <C-e> :Buffers<CR>
" }
" Signify {
    " this first setting decides in which order try to guess your current vcs
    " UPDATE it to reflect your preferences, it will speed up opening files
    let g:signify_vcs_list = [ 'git' ]
    " mappings to jump to changed blocks
    nmap <leader>sn <plug>(signify-next-hunk)
    nmap <leader>sp <plug>(signify-prev-hunk)
    " nicer colors
    highlight DiffAdd           cterm=bold ctermbg=none ctermfg=119
    highlight DiffDelete        cterm=bold ctermbg=none ctermfg=167
    highlight DiffChange        cterm=bold ctermbg=none ctermfg=227
    highlight SignifySignAdd    cterm=bold ctermbg=237  ctermfg=119
    highlight SignifySignDelete cterm=bold ctermbg=237  ctermfg=167
    highlight SignifySignChange cterm=bold ctermbg=237  ctermfg=227
" }
" Status Line {
  if has('statusline')
    set laststatus=2
    function! GetBufTotalNum()
      return len(filter(range(1,bufnr('$')),'buflisted(v:val)'))
    endfunction

    hi User1 cterm=None ctermfg=244 ctermbg=236 guifg=#808080 guibg=#303030
    hi User2 cterm=None ctermfg=245 ctermbg=237 guifg=#8a8a8a guibg=#3a3a3a
    hi User3 cterm=None ctermfg=244 ctermbg=236 guifg=#808080 guibg=#303030
    hi User4 cterm=None ctermfg=245 ctermbg=237 guifg=#8a8a8a guibg=#3a3a3a
    hi User5 cterm=None ctermfg=172 ctermbg=236 guifg=#fd971f guibg=#303030

    set statusline=%1*%F%*
    set statusline+=%<%5*%m\ %*
    set statusline+=%2*\ %{&ff}\ %*
    set statusline+=%3*\ %{&fenc}\ %*
    set statusline+=%4*\ %y\ %*
    set statusline+=%=%3*\ %P\ %*
    set statusline+=%2*\ %{GetBufTotalNum()}-%n\ %*
    set statusline+=%1*\ %l:%c\ %*
    set statusline+=%2*\ %r\ %*
  endif
" }
